services:
  loki:
    container_name: ${LZ}_loki_${ENV}
    image: grafana/loki:latest
    ports:
      - 3100:3100
    volumes:
      - ./loki/loki-config.yml:/etc/loki/loki-config.yaml:rw
      - ./loki/data:/data:rw
    command: -config.file=/etc/loki/loki-config.yaml
    restart: unless-stopped
    networks:
      - local_network
  grafana:
    container_name: ${LZ}_grafana_${ENV}
    user: ${UID}:${GID}
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    restart: unless-stopped	
    depends_on:
      - loki
    volumes:
      - ./grafana:/var/lib/grafana:rw
    networks:
      - local_network
  # promtail:
  #   container_name: ${LZ}_promtail_${ENV}
  #   image: grafana/promtail:latest
  #   volumes:
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - ./promtail/promtail-config.yml:/etc/promtail/promtail-config.yaml:ro
  #   restart: unless-stopped
  #   command: -config.file=/etc/promtail/promtail-config.yaml
  #   networks:
  #     - local_network
  watchtower:
    container_name: ${LZ}_watchtower_${ENV}
    image: containrrr/watchtower:latest
    environment:
      TZ: US/Central
      WATCHTOWER_NOTIFICATION_REPORT: "true"
      WATCHTOWER_SCHEDULE: "0 9 15-23 * * *"  # Run at minute 9 of hours 15-23 (3 PM to 11 PM)
      WATCHTOWER_CLEANUP: true # Remove old images after updates
      WATCHTOWER_NOTIFICATIONS: shoutrrr
      WATCHTOWER_NOTIFICATION_URL: telegram://${TELEGRAM_BOT_TOKEN}@telegram/?channels=${TELEGRAM_CHAT_ID}
      WATCHTOWER_NOTIFICATION_TEMPLATE: |
        {{- if .Report -}}
          {{- if .Report.Updated -}}
            Container updates detected:
            {{- range .Report.Updated}}
            - {{.Name}} ({{.ImageName}}): {{.CurrentImageID.ShortID}} â†’ {{.LatestImageID.ShortID}}
            {{- end -}}
          {{- end -}}
        {{- end -}}
    restart: unless-stopped
    depends_on:
      - loki
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./watchtower/config.json:/config.json:ro
    networks:
      - local_network

  cadvisor:
    container_name: ${LZ}_cadvisor_${ENV}
    image: gcr.io/cadvisor/cadvisor:latest
    platform: linux/arm64  # Specifically for Apple M3
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - 8080:8080
    privileged: true
    devices:
      - /dev/kmsg
    restart: unless-stopped
    networks:
      - local_network

  prometheus:
    container_name: ${LZ}_prometheus_${ENV}
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/data:/prometheus:rw
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - local_network

networks:
  local_network:
    name: "${LZ}_network_${ENV}"
    external: true